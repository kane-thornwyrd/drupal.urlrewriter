<?php

/**
 * @file
 *   The whole install/uninstall process.
 */

/**
 * Implements hook_schema().
 */
function urlrewriter_schema() {
  $schema = array();

  $schema['url_rewriting'] = array(
    'description' => 'Table for each rewriting settings',
    'fields' => array(
      'urid' => array(
        'description' => 'The primary identifier for a Url rewriting setting.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'path' => array(
        'description' => 'The {url_rewriting_path} of this setting.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'base_url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'prefix' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'arguments' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE
      ),
      'target' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'attributes' => array(
        'description' => 'The attributes for all the links.',
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE
      ),
    ),
    'primary key' => array('urid'),
    'unique keys' => array(
      'path' => array('path'),
    ),
    'export' => array(
      'key' => 'path',
      'identifier' => 'urlrewriting', // Exports will be defined as $preset
      'default hook' => 'default_urlrewriter_preset',  // Function hook name.
      'api' => array(
        'owner' => 'urlrewriter',
        'api' => 'default_urlrewriter_presets',  // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
  );


  return $schema;
}

/**
 * Implements hook_install();
 */
function urlrewriter_install() {
}

/**
 * Implements hook_uninstall();
 */
function urlrewriter_uninstall() {
}
